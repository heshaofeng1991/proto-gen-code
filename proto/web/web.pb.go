// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/web/web.proto

package web

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 通用返回结构。
type CommonRsp struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc" form:"desc"`
	Data                 *Empty   `protobuf:"bytes,3,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonRsp) Reset()         { *m = CommonRsp{} }
func (m *CommonRsp) String() string { return proto.CompactTextString(m) }
func (*CommonRsp) ProtoMessage()    {}
func (*CommonRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{0}
}

func (m *CommonRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonRsp.Unmarshal(m, b)
}
func (m *CommonRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonRsp.Marshal(b, m, deterministic)
}
func (m *CommonRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonRsp.Merge(m, src)
}
func (m *CommonRsp) XXX_Size() int {
	return xxx_messageInfo_CommonRsp.Size(m)
}
func (m *CommonRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonRsp proto.InternalMessageInfo

func (m *CommonRsp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CommonRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CommonRsp) GetData() *Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

// 空结构体。
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// 创建商品品牌请求结构。
type CreateBrandReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	CoverUrl             string   `protobuf:"bytes,2,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url" form:"cover_url"`
	SortOrder            int32    `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order" form:"sort_order"`
	CreatedBy            int64    `protobuf:"varint,4,opt,name=created_by,json=createdBy,proto3" json:"created_by" form:"created_by"`
	UpdatedBy            int64    `protobuf:"varint,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by" form:"updated_by"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark" form:"remark"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBrandReq) Reset()         { *m = CreateBrandReq{} }
func (m *CreateBrandReq) String() string { return proto.CompactTextString(m) }
func (*CreateBrandReq) ProtoMessage()    {}
func (*CreateBrandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{2}
}

func (m *CreateBrandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrandReq.Unmarshal(m, b)
}
func (m *CreateBrandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrandReq.Marshal(b, m, deterministic)
}
func (m *CreateBrandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrandReq.Merge(m, src)
}
func (m *CreateBrandReq) XXX_Size() int {
	return xxx_messageInfo_CreateBrandReq.Size(m)
}
func (m *CreateBrandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrandReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrandReq proto.InternalMessageInfo

func (m *CreateBrandReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateBrandReq) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *CreateBrandReq) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

func (m *CreateBrandReq) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *CreateBrandReq) GetUpdatedBy() int64 {
	if m != nil {
		return m.UpdatedBy
	}
	return 0
}

func (m *CreateBrandReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

// 创建商品品牌返回结构。
type CreateBrandRsp struct {
	Code                 int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	Desc                 string           `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc" form:"desc"`
	Data                 *CreateBrandData `protobuf:"bytes,3,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateBrandRsp) Reset()         { *m = CreateBrandRsp{} }
func (m *CreateBrandRsp) String() string { return proto.CompactTextString(m) }
func (*CreateBrandRsp) ProtoMessage()    {}
func (*CreateBrandRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{3}
}

func (m *CreateBrandRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrandRsp.Unmarshal(m, b)
}
func (m *CreateBrandRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrandRsp.Marshal(b, m, deterministic)
}
func (m *CreateBrandRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrandRsp.Merge(m, src)
}
func (m *CreateBrandRsp) XXX_Size() int {
	return xxx_messageInfo_CreateBrandRsp.Size(m)
}
func (m *CreateBrandRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrandRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrandRsp proto.InternalMessageInfo

func (m *CreateBrandRsp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateBrandRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateBrandRsp) GetData() *CreateBrandData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 创建商品品牌data结构。
type CreateBrandData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id" form:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBrandData) Reset()         { *m = CreateBrandData{} }
func (m *CreateBrandData) String() string { return proto.CompactTextString(m) }
func (*CreateBrandData) ProtoMessage()    {}
func (*CreateBrandData) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{4}
}

func (m *CreateBrandData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrandData.Unmarshal(m, b)
}
func (m *CreateBrandData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrandData.Marshal(b, m, deterministic)
}
func (m *CreateBrandData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrandData.Merge(m, src)
}
func (m *CreateBrandData) XXX_Size() int {
	return xxx_messageInfo_CreateBrandData.Size(m)
}
func (m *CreateBrandData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrandData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrandData proto.InternalMessageInfo

func (m *CreateBrandData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 编辑商品品牌请求结构。
type UpdateBrandReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	CoverUrl             string   `protobuf:"bytes,2,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url" form:"cover_url"`
	SortOrder            int32    `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order" form:"sort_order"`
	CreatedBy            int64    `protobuf:"varint,4,opt,name=created_by,json=createdBy,proto3" json:"created_by" form:"created_by"`
	UpdatedBy            int64    `protobuf:"varint,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by" form:"updated_by"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark" form:"remark"`
	DeleteFlag           int32    `protobuf:"varint,7,opt,name=delete_flag,json=deleteFlag,proto3" json:"delete_flag" form:"delete_flag"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBrandReq) Reset()         { *m = UpdateBrandReq{} }
func (m *UpdateBrandReq) String() string { return proto.CompactTextString(m) }
func (*UpdateBrandReq) ProtoMessage()    {}
func (*UpdateBrandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{5}
}

func (m *UpdateBrandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBrandReq.Unmarshal(m, b)
}
func (m *UpdateBrandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBrandReq.Marshal(b, m, deterministic)
}
func (m *UpdateBrandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBrandReq.Merge(m, src)
}
func (m *UpdateBrandReq) XXX_Size() int {
	return xxx_messageInfo_UpdateBrandReq.Size(m)
}
func (m *UpdateBrandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBrandReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBrandReq proto.InternalMessageInfo

func (m *UpdateBrandReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateBrandReq) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *UpdateBrandReq) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

func (m *UpdateBrandReq) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *UpdateBrandReq) GetUpdatedBy() int64 {
	if m != nil {
		return m.UpdatedBy
	}
	return 0
}

func (m *UpdateBrandReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *UpdateBrandReq) GetDeleteFlag() int32 {
	if m != nil {
		return m.DeleteFlag
	}
	return 0
}

type GetBrandByIDReq struct {
	// @gotags:   validate:"required" binding:"required,gte=1"
	BrandId              int64    `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id" form:"brand_id" validate:"required" binding:"required,gte=1"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandByIDReq) Reset()         { *m = GetBrandByIDReq{} }
func (m *GetBrandByIDReq) String() string { return proto.CompactTextString(m) }
func (*GetBrandByIDReq) ProtoMessage()    {}
func (*GetBrandByIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{6}
}

func (m *GetBrandByIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandByIDReq.Unmarshal(m, b)
}
func (m *GetBrandByIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandByIDReq.Marshal(b, m, deterministic)
}
func (m *GetBrandByIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandByIDReq.Merge(m, src)
}
func (m *GetBrandByIDReq) XXX_Size() int {
	return xxx_messageInfo_GetBrandByIDReq.Size(m)
}
func (m *GetBrandByIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandByIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandByIDReq proto.InternalMessageInfo

func (m *GetBrandByIDReq) GetBrandId() int64 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

type GetBrandByIDRsp struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id" form:"id"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	CoverUrl             string               `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url" form:"cover_url"`
	SortOrder            int32                `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order" form:"sort_order"`
	CreatedBy            int64                `protobuf:"varint,5,opt,name=created_by,json=createdBy,proto3" json:"created_by" form:"created_by"`
	UpdatedBy            int64                `protobuf:"varint,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by" form:"updated_by"`
	Remark               string               `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark" form:"remark"`
	DeleteFlag           int32                `protobuf:"varint,8,opt,name=delete_flag,json=deleteFlag,proto3" json:"delete_flag" form:"delete_flag"`
	CreatedTime          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_time,json=createdTime,proto3" json:"created_time" form:"created_time"`
	UpdatedTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time" form:"updated_time"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetBrandByIDRsp) Reset()         { *m = GetBrandByIDRsp{} }
func (m *GetBrandByIDRsp) String() string { return proto.CompactTextString(m) }
func (*GetBrandByIDRsp) ProtoMessage()    {}
func (*GetBrandByIDRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{7}
}

func (m *GetBrandByIDRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandByIDRsp.Unmarshal(m, b)
}
func (m *GetBrandByIDRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandByIDRsp.Marshal(b, m, deterministic)
}
func (m *GetBrandByIDRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandByIDRsp.Merge(m, src)
}
func (m *GetBrandByIDRsp) XXX_Size() int {
	return xxx_messageInfo_GetBrandByIDRsp.Size(m)
}
func (m *GetBrandByIDRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandByIDRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandByIDRsp proto.InternalMessageInfo

func (m *GetBrandByIDRsp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetBrandByIDRsp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetBrandByIDRsp) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *GetBrandByIDRsp) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

func (m *GetBrandByIDRsp) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *GetBrandByIDRsp) GetUpdatedBy() int64 {
	if m != nil {
		return m.UpdatedBy
	}
	return 0
}

func (m *GetBrandByIDRsp) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *GetBrandByIDRsp) GetDeleteFlag() int32 {
	if m != nil {
		return m.DeleteFlag
	}
	return 0
}

func (m *GetBrandByIDRsp) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *GetBrandByIDRsp) GetUpdatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

type MultiGetBrandReq struct {
	Page                 int32                `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	PageSize             int32                `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	Name                 string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time" form:"start_time"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time" form:"end_time"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MultiGetBrandReq) Reset()         { *m = MultiGetBrandReq{} }
func (m *MultiGetBrandReq) String() string { return proto.CompactTextString(m) }
func (*MultiGetBrandReq) ProtoMessage()    {}
func (*MultiGetBrandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{8}
}

func (m *MultiGetBrandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiGetBrandReq.Unmarshal(m, b)
}
func (m *MultiGetBrandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiGetBrandReq.Marshal(b, m, deterministic)
}
func (m *MultiGetBrandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiGetBrandReq.Merge(m, src)
}
func (m *MultiGetBrandReq) XXX_Size() int {
	return xxx_messageInfo_MultiGetBrandReq.Size(m)
}
func (m *MultiGetBrandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiGetBrandReq.DiscardUnknown(m)
}

var xxx_messageInfo_MultiGetBrandReq proto.InternalMessageInfo

func (m *MultiGetBrandReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *MultiGetBrandReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *MultiGetBrandReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MultiGetBrandReq) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *MultiGetBrandReq) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type MultiGetBrandRsp struct {
	Code                 int64              `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	Desc                 string             `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc" form:"desc"`
	Data                 *MultiGetBrandData `protobuf:"bytes,3,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MultiGetBrandRsp) Reset()         { *m = MultiGetBrandRsp{} }
func (m *MultiGetBrandRsp) String() string { return proto.CompactTextString(m) }
func (*MultiGetBrandRsp) ProtoMessage()    {}
func (*MultiGetBrandRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{9}
}

func (m *MultiGetBrandRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiGetBrandRsp.Unmarshal(m, b)
}
func (m *MultiGetBrandRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiGetBrandRsp.Marshal(b, m, deterministic)
}
func (m *MultiGetBrandRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiGetBrandRsp.Merge(m, src)
}
func (m *MultiGetBrandRsp) XXX_Size() int {
	return xxx_messageInfo_MultiGetBrandRsp.Size(m)
}
func (m *MultiGetBrandRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiGetBrandRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MultiGetBrandRsp proto.InternalMessageInfo

func (m *MultiGetBrandRsp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MultiGetBrandRsp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MultiGetBrandRsp) GetData() *MultiGetBrandData {
	if m != nil {
		return m.Data
	}
	return nil
}

type MultiGetBrandData struct {
	List                 []*MultiGetBrandContent `protobuf:"bytes,1,rep,name=list,proto3" json:"list" form:"list"`
	Total                int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MultiGetBrandData) Reset()         { *m = MultiGetBrandData{} }
func (m *MultiGetBrandData) String() string { return proto.CompactTextString(m) }
func (*MultiGetBrandData) ProtoMessage()    {}
func (*MultiGetBrandData) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{10}
}

func (m *MultiGetBrandData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiGetBrandData.Unmarshal(m, b)
}
func (m *MultiGetBrandData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiGetBrandData.Marshal(b, m, deterministic)
}
func (m *MultiGetBrandData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiGetBrandData.Merge(m, src)
}
func (m *MultiGetBrandData) XXX_Size() int {
	return xxx_messageInfo_MultiGetBrandData.Size(m)
}
func (m *MultiGetBrandData) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiGetBrandData.DiscardUnknown(m)
}

var xxx_messageInfo_MultiGetBrandData proto.InternalMessageInfo

func (m *MultiGetBrandData) GetList() []*MultiGetBrandContent {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *MultiGetBrandData) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type MultiGetBrandContent struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id" form:"id"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	CoverUrl             string               `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url" form:"cover_url"`
	SortOrder            int32                `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order" form:"sort_order"`
	CreatedBy            int64                `protobuf:"varint,5,opt,name=created_by,json=createdBy,proto3" json:"created_by" form:"created_by"`
	UpdatedBy            int64                `protobuf:"varint,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by" form:"updated_by"`
	Remark               string               `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark" form:"remark"`
	DeleteFlag           int32                `protobuf:"varint,8,opt,name=delete_flag,json=deleteFlag,proto3" json:"delete_flag" form:"delete_flag"`
	CreatedTime          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_time,json=createdTime,proto3" json:"created_time" form:"created_time"`
	UpdatedTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time" form:"updated_time"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MultiGetBrandContent) Reset()         { *m = MultiGetBrandContent{} }
func (m *MultiGetBrandContent) String() string { return proto.CompactTextString(m) }
func (*MultiGetBrandContent) ProtoMessage()    {}
func (*MultiGetBrandContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{11}
}

func (m *MultiGetBrandContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiGetBrandContent.Unmarshal(m, b)
}
func (m *MultiGetBrandContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiGetBrandContent.Marshal(b, m, deterministic)
}
func (m *MultiGetBrandContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiGetBrandContent.Merge(m, src)
}
func (m *MultiGetBrandContent) XXX_Size() int {
	return xxx_messageInfo_MultiGetBrandContent.Size(m)
}
func (m *MultiGetBrandContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiGetBrandContent.DiscardUnknown(m)
}

var xxx_messageInfo_MultiGetBrandContent proto.InternalMessageInfo

func (m *MultiGetBrandContent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MultiGetBrandContent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MultiGetBrandContent) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *MultiGetBrandContent) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

func (m *MultiGetBrandContent) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *MultiGetBrandContent) GetUpdatedBy() int64 {
	if m != nil {
		return m.UpdatedBy
	}
	return 0
}

func (m *MultiGetBrandContent) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *MultiGetBrandContent) GetDeleteFlag() int32 {
	if m != nil {
		return m.DeleteFlag
	}
	return 0
}

func (m *MultiGetBrandContent) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *MultiGetBrandContent) GetUpdatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

type RemoveBrandReq struct {
	BrandId              int64    `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id" form:"brand_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBrandReq) Reset()         { *m = RemoveBrandReq{} }
func (m *RemoveBrandReq) String() string { return proto.CompactTextString(m) }
func (*RemoveBrandReq) ProtoMessage()    {}
func (*RemoveBrandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98e7076c5bdd8cce, []int{12}
}

func (m *RemoveBrandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBrandReq.Unmarshal(m, b)
}
func (m *RemoveBrandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBrandReq.Marshal(b, m, deterministic)
}
func (m *RemoveBrandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBrandReq.Merge(m, src)
}
func (m *RemoveBrandReq) XXX_Size() int {
	return xxx_messageInfo_RemoveBrandReq.Size(m)
}
func (m *RemoveBrandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBrandReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBrandReq proto.InternalMessageInfo

func (m *RemoveBrandReq) GetBrandId() int64 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func init() {
	proto.RegisterType((*CommonRsp)(nil), "admin.CommonRsp")
	proto.RegisterType((*Empty)(nil), "admin.Empty")
	proto.RegisterType((*CreateBrandReq)(nil), "admin.CreateBrandReq")
	proto.RegisterType((*CreateBrandRsp)(nil), "admin.CreateBrandRsp")
	proto.RegisterType((*CreateBrandData)(nil), "admin.CreateBrandData")
	proto.RegisterType((*UpdateBrandReq)(nil), "admin.UpdateBrandReq")
	proto.RegisterType((*GetBrandByIDReq)(nil), "admin.GetBrandByIDReq")
	proto.RegisterType((*GetBrandByIDRsp)(nil), "admin.GetBrandByIDRsp")
	proto.RegisterType((*MultiGetBrandReq)(nil), "admin.MultiGetBrandReq")
	proto.RegisterType((*MultiGetBrandRsp)(nil), "admin.MultiGetBrandRsp")
	proto.RegisterType((*MultiGetBrandData)(nil), "admin.MultiGetBrandData")
	proto.RegisterType((*MultiGetBrandContent)(nil), "admin.MultiGetBrandContent")
	proto.RegisterType((*RemoveBrandReq)(nil), "admin.RemoveBrandReq")
}

func init() { proto.RegisterFile("proto/web/web.proto", fileDescriptor_98e7076c5bdd8cce) }

var fileDescriptor_98e7076c5bdd8cce = []byte{
	// 929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xcf, 0x8f, 0xdb, 0x44,
	0x14, 0xc6, 0xf9, 0xed, 0x97, 0x65, 0xbb, 0x0c, 0xa5, 0x44, 0x69, 0x17, 0x27, 0xae, 0x28, 0x61,
	0x0f, 0x89, 0xd8, 0x56, 0x48, 0x94, 0x13, 0xde, 0x42, 0xd5, 0x43, 0x85, 0xe4, 0x52, 0x09, 0x71,
	0x89, 0x26, 0xeb, 0x59, 0xcb, 0x5a, 0xdb, 0xe3, 0xda, 0x93, 0x2d, 0x29, 0xe2, 0xd2, 0x03, 0x07,
	0x4e, 0x2b, 0x38, 0xf0, 0x87, 0x71, 0xcf, 0x4a, 0x15, 0xa7, 0x5c, 0xf8, 0x13, 0x40, 0xf3, 0xc6,
	0x4e, 0x6c, 0xaf, 0xa3, 0x45, 0xda, 0x03, 0x07, 0x38, 0xac, 0xa3, 0x79, 0xef, 0x9b, 0xf7, 0xbd,
	0xf7, 0xcd, 0xcc, 0x7b, 0x0b, 0xef, 0x46, 0x31, 0x17, 0x7c, 0xf2, 0x92, 0xcd, 0xe4, 0xdf, 0x18,
	0x57, 0xa4, 0x49, 0x9d, 0xc0, 0x0b, 0xfb, 0x43, 0x97, 0x73, 0xd7, 0x67, 0x13, 0x34, 0xce, 0xe6,
	0x27, 0x13, 0x1a, 0x86, 0x5c, 0x50, 0xe1, 0xf1, 0x30, 0x51, 0xc8, 0x7e, 0xbf, 0x0c, 0x71, 0xb9,
	0xcb, 0x53, 0x9f, 0x51, 0xf6, 0x09, 0x2f, 0x60, 0x89, 0xa0, 0x41, 0xb4, 0x0d, 0x70, 0x46, 0x7d,
	0xcf, 0xa1, 0x82, 0xc7, 0x0a, 0x60, 0x26, 0xa0, 0x1f, 0xf1, 0x20, 0xe0, 0xa1, 0x9d, 0x44, 0xe4,
	0x0e, 0x34, 0x8e, 0xb9, 0xc3, 0x7a, 0xda, 0x40, 0x1b, 0xd5, 0xad, 0xce, 0x6a, 0x69, 0xe0, 0xda,
	0xc6, 0xaf, 0xf4, 0x3a, 0x2c, 0x39, 0xee, 0xd5, 0x06, 0xda, 0x48, 0x57, 0x5e, 0xb9, 0xb6, 0xf1,
	0x4b, 0x0e, 0xa0, 0xe1, 0x50, 0x41, 0x7b, 0xf5, 0x81, 0x36, 0xea, 0x1e, 0xee, 0x8c, 0xb1, 0xbe,
	0xf1, 0x97, 0x41, 0x24, 0x16, 0x29, 0x96, 0x0a, 0x6a, 0xe3, 0xd7, 0x6c, 0x43, 0x13, 0x1d, 0xe6,
	0x9f, 0x1a, 0xec, 0x1e, 0xc5, 0x8c, 0x0a, 0x66, 0xc5, 0x34, 0x74, 0x6c, 0xf6, 0x82, 0xec, 0x43,
	0x23, 0xa4, 0x81, 0xca, 0x41, 0xb7, 0xf4, 0x37, 0x17, 0x46, 0xf3, 0x5b, 0xed, 0xfb, 0xbf, 0x34,
	0x1b, 0xcd, 0xe4, 0x1e, 0xe8, 0xc7, 0xfc, 0x8c, 0xc5, 0xd3, 0x79, 0xec, 0xa7, 0x99, 0xe4, 0x30,
	0x1d, 0xf4, 0x3d, 0x8f, 0x7d, 0xf2, 0x21, 0x40, 0xc2, 0x63, 0x31, 0xe5, 0xb1, 0xc3, 0x62, 0x4c,
	0xaa, 0x69, 0xb5, 0xde, 0x5c, 0x18, 0xb5, 0xbd, 0xb7, 0x6c, 0x5d, 0x7a, 0xbe, 0x96, 0x0e, 0x09,
	0x3b, 0x46, 0x7e, 0x67, 0x3a, 0x5b, 0xf4, 0x1a, 0x58, 0xf7, 0x1a, 0x96, 0x7a, 0xac, 0x85, 0x84,
	0xcd, 0x23, 0x27, 0x83, 0x35, 0x8b, 0xb0, 0xd4, 0x63, 0x2d, 0xc8, 0x10, 0x5a, 0x31, 0x0b, 0x68,
	0x7c, 0xda, 0x6b, 0x95, 0x33, 0x4b, 0x1d, 0xe6, 0xeb, 0x52, 0xc5, 0xd7, 0x54, 0xfd, 0x41, 0x41,
	0xf5, 0x5b, 0xa9, 0xea, 0x39, 0x82, 0x47, 0x54, 0xd0, 0x4b, 0xfa, 0x0f, 0xe1, 0x46, 0x09, 0x42,
	0x76, 0xa1, 0xe6, 0x39, 0x2a, 0x05, 0xbb, 0xe6, 0x39, 0xe6, 0x79, 0x0d, 0x76, 0x9f, 0x63, 0x61,
	0xff, 0x91, 0x93, 0x21, 0x06, 0x74, 0x1d, 0xe6, 0x33, 0xc1, 0xa6, 0x27, 0x3e, 0x75, 0x7b, 0x6d,
	0x99, 0x98, 0x0d, 0xca, 0xf4, 0x95, 0x4f, 0x5d, 0xf3, 0x01, 0xdc, 0x78, 0xcc, 0x04, 0xca, 0x61,
	0x2d, 0x9e, 0x3c, 0x92, 0x92, 0x0c, 0xa1, 0x33, 0x93, 0xeb, 0x69, 0xa6, 0xdd, 0x9a, 0xbb, 0x8d,
	0xf6, 0x27, 0x8e, 0xf9, 0x4b, 0xbd, 0xb4, 0x2d, 0x89, 0xca, 0x62, 0x13, 0x92, 0x2a, 0x8b, 0xaa,
	0xa5, 0x72, 0xde, 0xce, 0xcb, 0x59, 0x47, 0xc7, 0x46, 0xc3, 0xfd, 0x82, 0x86, 0x0d, 0x4c, 0x35,
	0xa7, 0xdd, 0x7e, 0x41, 0x3b, 0x14, 0x25, 0xaf, 0xd9, 0x7e, 0x41, 0xb3, 0x96, 0x72, 0x6f, 0xb4,
	0xba, 0xb5, 0xd6, 0xaa, 0x8d, 0xb4, 0x5b, 0x04, 0xea, 0x94, 0x05, 0x22, 0xcf, 0x60, 0x27, 0xa3,
	0x95, 0x7d, 0xa8, 0xa7, 0xe3, 0xa5, 0xec, 0x8f, 0x55, 0x0f, 0x1a, 0x67, 0x3d, 0x68, 0xfc, 0x4d,
	0xd6, 0xa4, 0xac, 0x9b, 0xab, 0xa5, 0x51, 0xd8, 0x73, 0x7e, 0x61, 0x68, 0x76, 0x37, 0xb5, 0x48,
	0x9c, 0x0c, 0x9a, 0x25, 0x8b, 0x41, 0xe1, 0x9f, 0x05, 0xcd, 0xef, 0x51, 0x41, 0x53, 0x8b, 0xc4,
	0x99, 0x3f, 0xd7, 0x60, 0xef, 0xe9, 0xdc, 0x17, 0x5e, 0x76, 0x32, 0xf2, 0x30, 0xfb, 0xd0, 0x88,
	0xa8, 0xab, 0xee, 0xf7, 0xe6, 0x4a, 0xa2, 0x8d, 0xdc, 0x05, 0x5d, 0xfe, 0x4e, 0x13, 0xef, 0x95,
	0x3a, 0xa6, 0x0d, 0xa0, 0x23, 0x1d, 0xcf, 0xbc, 0x57, 0x6c, 0xfd, 0x40, 0xea, 0xd5, 0x0f, 0xe4,
	0x29, 0x40, 0x22, 0x68, 0x2c, 0x54, 0x1d, 0x8d, 0x2b, 0xeb, 0x20, 0xab, 0xa5, 0x91, 0xdb, 0x81,
	0x55, 0xe8, 0xb8, 0x46, 0x61, 0x1e, 0x43, 0x87, 0x85, 0xa9, 0x28, 0xcd, 0x2b, 0x83, 0xed, 0xad,
	0x96, 0xc6, 0x1a, 0x8f, 0xa1, 0xda, 0x2c, 0x54, 0x62, 0xfc, 0xa4, 0x95, 0xc5, 0xb8, 0x66, 0x53,
	0xfa, 0xb4, 0xd0, 0x94, 0x7a, 0x69, 0x53, 0x2a, 0x50, 0x54, 0xb6, 0x25, 0x0e, 0xef, 0x5c, 0x02,
	0x91, 0xcf, 0xa0, 0xe1, 0x7b, 0x89, 0xe8, 0x69, 0x83, 0xfa, 0xa8, 0x7b, 0x78, 0xbb, 0x2a, 0xd8,
	0x11, 0x0f, 0x05, 0x0b, 0x85, 0x8a, 0x27, 0xc1, 0x36, 0x7e, 0x89, 0x01, 0x4d, 0xc1, 0x05, 0x55,
	0xdd, 0xa8, 0x6e, 0xe9, 0xab, 0xa5, 0xa1, 0x0c, 0xb6, 0xfa, 0x31, 0x7f, 0xab, 0xc3, 0xcd, 0xaa,
	0x48, 0xff, 0x3f, 0xd0, 0x7f, 0xfb, 0x81, 0xde, 0x87, 0x5d, 0x9b, 0x05, 0xfc, 0x6c, 0x33, 0x7d,
	0xae, 0x6e, 0xb5, 0x87, 0xe7, 0x0d, 0x68, 0x7e, 0x21, 0xaf, 0x07, 0x39, 0x81, 0x6e, 0x6e, 0xc0,
	0x91, 0xf7, 0x2e, 0xcf, 0x45, 0x9b, 0xbd, 0xe8, 0x57, 0x99, 0x93, 0xc8, 0xfc, 0xf8, 0xf5, 0xef,
	0x7f, 0xfc, 0x5a, 0xbb, 0x6b, 0x7e, 0x30, 0x39, 0xfb, 0x64, 0x82, 0x88, 0x89, 0x62, 0x0e, 0x68,
	0x48, 0x5d, 0x16, 0x4f, 0x54, 0xf5, 0x0f, 0xb5, 0x03, 0x32, 0x85, 0x6e, 0x6e, 0x48, 0xae, 0x79,
	0x8a, 0x83, 0xb3, 0xbf, 0x97, 0xf1, 0x64, 0xff, 0x68, 0x99, 0x1f, 0x21, 0xc5, 0xd0, 0xbc, 0xb3,
	0x8d, 0x82, 0x39, 0x9e, 0x90, 0x04, 0x21, 0xec, 0xe4, 0x87, 0x07, 0xc9, 0x26, 0x7c, 0x69, 0x10,
	0xf5, 0x2b, 0xed, 0x49, 0x64, 0x8e, 0x91, 0x68, 0x44, 0xee, 0x6d, 0x23, 0x72, 0x99, 0x98, 0xfc,
	0x90, 0x09, 0xfb, 0x23, 0x39, 0x85, 0xb7, 0x0b, 0x0f, 0x82, 0xbc, 0x5f, 0xf5, 0xe0, 0x24, 0x63,
	0xb5, 0x23, 0x89, 0xcc, 0x11, 0x52, 0x9a, 0x64, 0xb0, 0x8d, 0x72, 0x36, 0xf7, 0x4f, 0xa7, 0x2e,
	0x13, 0x84, 0x42, 0x37, 0x77, 0xc8, 0x6b, 0xf5, 0x8a, 0x07, 0x5f, 0xa1, 0xde, 0x95, 0x07, 0x14,
	0x63, 0x84, 0x87, 0xda, 0x81, 0xd5, 0xf9, 0xae, 0x35, 0x9e, 0x7c, 0xfe, 0x92, 0xcd, 0x66, 0x2d,
	0xbc, 0x88, 0xf7, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x60, 0xf3, 0x23, 0x8e, 0x8e, 0x0b, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// 创建发行方商品.
	CreateBrand(ctx context.Context, in *CreateBrandReq, opts ...grpc.CallOption) (*CreateBrandRsp, error)
	// 编辑发行方商品.
	UpdateBrand(ctx context.Context, in *UpdateBrandReq, opts ...grpc.CallOption) (*CommonRsp, error)
	// 基于发行方商品ID查询发行方商品详情.
	GetBrandByID(ctx context.Context, in *GetBrandByIDReq, opts ...grpc.CallOption) (*GetBrandByIDRsp, error)
	// 批量查询发行方商品数据.
	MultiGetBrand(ctx context.Context, in *MultiGetBrandReq, opts ...grpc.CallOption) (*MultiGetBrandRsp, error)
	// 删除发行方商品.
	RemoveBrand(ctx context.Context, in *RemoveBrandReq, opts ...grpc.CallOption) (*CommonRsp, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) CreateBrand(ctx context.Context, in *CreateBrandReq, opts ...grpc.CallOption) (*CreateBrandRsp, error) {
	out := new(CreateBrandRsp)
	err := c.cc.Invoke(ctx, "/admin.Admin/CreateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UpdateBrand(ctx context.Context, in *UpdateBrandReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/admin.Admin/UpdateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetBrandByID(ctx context.Context, in *GetBrandByIDReq, opts ...grpc.CallOption) (*GetBrandByIDRsp, error) {
	out := new(GetBrandByIDRsp)
	err := c.cc.Invoke(ctx, "/admin.Admin/GetBrandByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) MultiGetBrand(ctx context.Context, in *MultiGetBrandReq, opts ...grpc.CallOption) (*MultiGetBrandRsp, error) {
	out := new(MultiGetBrandRsp)
	err := c.cc.Invoke(ctx, "/admin.Admin/MultiGetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) RemoveBrand(ctx context.Context, in *RemoveBrandReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/admin.Admin/RemoveBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// 创建发行方商品.
	CreateBrand(context.Context, *CreateBrandReq) (*CreateBrandRsp, error)
	// 编辑发行方商品.
	UpdateBrand(context.Context, *UpdateBrandReq) (*CommonRsp, error)
	// 基于发行方商品ID查询发行方商品详情.
	GetBrandByID(context.Context, *GetBrandByIDReq) (*GetBrandByIDRsp, error)
	// 批量查询发行方商品数据.
	MultiGetBrand(context.Context, *MultiGetBrandReq) (*MultiGetBrandRsp, error)
	// 删除发行方商品.
	RemoveBrand(context.Context, *RemoveBrandReq) (*CommonRsp, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) CreateBrand(ctx context.Context, req *CreateBrandReq) (*CreateBrandRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBrand not implemented")
}
func (*UnimplementedAdminServer) UpdateBrand(ctx context.Context, req *UpdateBrandReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBrand not implemented")
}
func (*UnimplementedAdminServer) GetBrandByID(ctx context.Context, req *GetBrandByIDReq) (*GetBrandByIDRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrandByID not implemented")
}
func (*UnimplementedAdminServer) MultiGetBrand(ctx context.Context, req *MultiGetBrandReq) (*MultiGetBrandRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiGetBrand not implemented")
}
func (*UnimplementedAdminServer) RemoveBrand(ctx context.Context, req *RemoveBrandReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveBrand not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_CreateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBrandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).CreateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/CreateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).CreateBrand(ctx, req.(*CreateBrandReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UpdateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBrandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UpdateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/UpdateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UpdateBrand(ctx, req.(*UpdateBrandReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetBrandByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetBrandByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/GetBrandByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetBrandByID(ctx, req.(*GetBrandByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_MultiGetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiGetBrandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).MultiGetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/MultiGetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).MultiGetBrand(ctx, req.(*MultiGetBrandReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_RemoveBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBrandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).RemoveBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Admin/RemoveBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).RemoveBrand(ctx, req.(*RemoveBrandReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBrand",
			Handler:    _Admin_CreateBrand_Handler,
		},
		{
			MethodName: "UpdateBrand",
			Handler:    _Admin_UpdateBrand_Handler,
		},
		{
			MethodName: "GetBrandByID",
			Handler:    _Admin_GetBrandByID_Handler,
		},
		{
			MethodName: "MultiGetBrand",
			Handler:    _Admin_MultiGetBrand_Handler,
		},
		{
			MethodName: "RemoveBrand",
			Handler:    _Admin_RemoveBrand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/web/web.proto",
}
